{"mappings":"oeACA,IAAAA,EAAAC,EAAA,sBAIA,MAAMC,EAAOC,SAASC,cAAc,SAGpC,IAAIC,EAAQ,EAMZ,SAASC,EAAcC,EAAGC,GACxB,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,GAAEH,EAAGQ,MAAAP,IAEbG,EAAO,GAAEJ,EAAGQ,MAAAP,MAEbA,MAZPR,EAAAgB,OAAOC,KAAK,kDAoDZf,EAAKgB,iBAAiB,UAnCEC,IACtBA,EAAMC,iBAEN,MAAMC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cAAcC,SAE9CC,EAAaC,OAAON,EAAMO,OAC1BC,EAAYF,OAAOL,EAAKM,OACxBE,EAAmBH,OAAOJ,EAAOK,OAGvC,GAAIF,GAAc,GAAKG,GAAa,GAAKC,GAAoB,EAK3D,OAJAT,EAAMO,MAAQ,KACdN,EAAKM,MAAQ,KACbL,EAAOK,MAAQ,KAERG,EAAAC,OAAOC,QACZ,kCACA,wCACA,oBAIJ5B,EAAQqB,EACR,IAAK,IAAIQ,EAAI,EAAGA,GAAKJ,EAAkBI,IACrC5B,EAAc4B,EAAG7B,GACd8B,MAAK,EAAC5B,EAAEA,EAAGQ,MAAAqB,MACVpC,EAAAgB,OAAOqB,QAAQ,qBAAqB9B,QAAQ6B,UAE7CE,OAAM,EAAC/B,EAAEA,EAAGQ,MAAAwB,MACXvC,EAAAgB,OAAOiB,QAAQ,oBAAoB1B,QAAQgC,UAE/ClC,GAASwB","sources":["src/js/03-promises.js"],"sourcesContent":["// Initializing Notiflix - Notify and Report modules\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\n\n// Selecting input form\nconst form = document.querySelector('.form');\n\n// Initializing timer for promises generation delay\nlet timer = 0;\n\n// Letting user know, that all input values must be greater than 0\nNotify.info('Please input values greater than 0. Thank You!');\n\n// Function for generating promises\nfunction createPromise(i, timer) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ i, timer });\n      } else {\n        reject({ i, timer });\n      }\n    }, timer);\n  });\n}\n\n// Function for handling form input data and using callback for generating promises\nconst promisesHandler = event => {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget.elements;\n\n  const firstDelay = Number(delay.value);\n  const stepDelay = Number(step.value);\n  const amountOfPromises = Number(amount.value);\n\n  // Checking for valid input - values greater than 0\n  if (firstDelay <= 0 || stepDelay <= 0 || amountOfPromises <= 0) {\n    delay.value = null;\n    step.value = null;\n    amount.value = null;\n\n    return Report.failure(\n      'Oops! I did it again... Or not?',\n      'All values must be greater than zero!',\n      'If you say so...'\n    );\n  }\n\n  timer = firstDelay;\n  for (let i = 1; i <= amountOfPromises; i++) {\n    createPromise(i, timer)\n      .then(({ i, timer }) => {\n        Notify.success(`Fulfilled promise ${i} in ${timer}ms`);\n      })\n      .catch(({ i, timer }) => {\n        Notify.failure(`Rejected promise ${i} in ${timer}ms`);\n      });\n    timer += stepDelay;\n  }\n};\n\nform.addEventListener('submit', promisesHandler);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$timer","$47d4ff9957288465$var$createPromise","i","timer1","Promise","resolve","reject","setTimeout","Math","random","timer","Notify","info","addEventListener","event","preventDefault","delay","step","amount","currentTarget","elements","firstDelay","Number","value","stepDelay","amountOfPromises","$i37YJ","Report","failure","i1","then","timer2","success","catch","timer3"],"version":3,"file":"03-promises.962ca288.js.map"}